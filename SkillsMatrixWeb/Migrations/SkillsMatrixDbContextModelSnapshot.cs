// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SkillsMatrixWeb.Models;
using System;

namespace SkillsMatrixWeb.Migrations
{
    [DbContext(typeof(SkillsMatrixDbContext))]
    partial class SkillsMatrixDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Seat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("PositionName");

                    b.Property<int>("ProjectId");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("SkillsMatrixWeb.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Telephone");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("SkillsMatrixWeb.Models.EmployeeJobHistory", b =>
                {
                    b.Property<int>("EmployeeId");

                    b.Property<int>("JobHistoryId");

                    b.HasKey("EmployeeId", "JobHistoryId");

                    b.HasIndex("JobHistoryId");

                    b.ToTable("EmployeeJobHistories");
                });

            modelBuilder.Entity("SkillsMatrixWeb.Models.JobHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("Capacity");

                    b.Property<DateTime?>("EndDate");

                    b.Property<int>("SeatId");

                    b.Property<DateTime>("Startdate");

                    b.HasKey("Id");

                    b.HasIndex("SeatId");

                    b.ToTable("JobHistories");
                });

            modelBuilder.Entity("SkillsMatrixWeb.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Deadline");

                    b.Property<int>("HoursNeed");

                    b.Property<bool>("IsOpen");

                    b.Property<string>("Location");

                    b.Property<int>("MinimumSkillLevel");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("SkillsMatrixWeb.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EmployeeId");

                    b.Property<int>("LastYearUsed");

                    b.Property<int>("Level");

                    b.Property<string>("Name");

                    b.Property<int>("NoOfYears");

                    b.Property<string>("Remarks");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("SkillsMatrixWeb.Models.TechnologiesInTechnologiesStack", b =>
                {
                    b.Property<int>("TechnologyId");

                    b.Property<int>("TechnologyStackId");

                    b.HasKey("TechnologyId", "TechnologyStackId");

                    b.HasIndex("TechnologyStackId");

                    b.ToTable("TechnologiesInTechnologiesStacks");
                });

            modelBuilder.Entity("SkillsMatrixWeb.Models.Technology", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Version");

                    b.HasKey("Id");

                    b.ToTable("Technologies");
                });

            modelBuilder.Entity("SkillsMatrixWeb.Models.TechnologysInSkill", b =>
                {
                    b.Property<int>("TechnologyId");

                    b.Property<int>("SkillId");

                    b.HasKey("TechnologyId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("TechnologysInSkills");
                });

            modelBuilder.Entity("SkillsMatrixWeb.Models.TechnologyStack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Details");

                    b.Property<string>("Name");

                    b.Property<int>("SeatId");

                    b.HasKey("Id");

                    b.HasIndex("SeatId");

                    b.ToTable("TechnologyStacks");
                });

            modelBuilder.Entity("Seat", b =>
                {
                    b.HasOne("SkillsMatrixWeb.Models.Project")
                        .WithMany("Seats")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SkillsMatrixWeb.Models.EmployeeJobHistory", b =>
                {
                    b.HasOne("SkillsMatrixWeb.Models.Employee", "Employee")
                        .WithMany("EmployeeJobHistories")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SkillsMatrixWeb.Models.JobHistory", "JobHistory")
                        .WithMany("EmployeeJobHistories")
                        .HasForeignKey("JobHistoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SkillsMatrixWeb.Models.JobHistory", b =>
                {
                    b.HasOne("Seat")
                        .WithMany("JobHistories")
                        .HasForeignKey("SeatId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SkillsMatrixWeb.Models.Skill", b =>
                {
                    b.HasOne("SkillsMatrixWeb.Models.Employee")
                        .WithMany("Skills")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SkillsMatrixWeb.Models.TechnologiesInTechnologiesStack", b =>
                {
                    b.HasOne("SkillsMatrixWeb.Models.Technology", "Technology")
                        .WithMany("TechnologiesInTechnologiesStacks")
                        .HasForeignKey("TechnologyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SkillsMatrixWeb.Models.TechnologyStack", "TechnologyStack")
                        .WithMany("TechnologiesInTechnologiesStacks")
                        .HasForeignKey("TechnologyStackId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SkillsMatrixWeb.Models.TechnologysInSkill", b =>
                {
                    b.HasOne("SkillsMatrixWeb.Models.Skill", "Skill")
                        .WithMany("TechnologyInSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SkillsMatrixWeb.Models.Technology", "Technology")
                        .WithMany("TechnologyInSkills")
                        .HasForeignKey("TechnologyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SkillsMatrixWeb.Models.TechnologyStack", b =>
                {
                    b.HasOne("Seat")
                        .WithMany("TechnologyStacks")
                        .HasForeignKey("SeatId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
